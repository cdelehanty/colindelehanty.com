---
import MainLayout from '@/layouts/main-layout.astro'
import { capitalizer } from '@/lib/utils'
import { getCollection } from 'astro:content'
import ProjectTabs from '@/features/projects/components/project-tabs.astro'
import ProjectCard from '@/features/projects/components/project-card.astro'
import HeroSection from '@/components/sections/hero-section.astro'

export async function getStaticPaths() {
	const allProjects = await getCollection('work')
	const filteredProjects = allProjects.filter(
		(project) => !project.data.excluded
	)
	const uniqueCategories = [
		...new Set(filteredProjects.map((project) => project.data.category).flat())
	]

	return uniqueCategories.map((category) => {
		const categoryProjects = filteredProjects
			.filter((project) => project.data.category.includes(category))
			.sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf())
		return {
			params: { category },
			props: { projects: categoryProjects }
		}
	})
}

const { category } = Astro.params as { category: string }
const { projects } = Astro.props
---

<MainLayout
	title={`${capitalizer(category)}`}
	description={`All projects for ${category} category`}
>
	<HeroSection
		title="Work"
		description={`
			Learn more about the projects Iâ€™ve worked on with clients aiming to create experiences that connect us to something greater.
		`}
		cover="/work/Work_Cover"
		animation={false}
	/>

	<div class="section-padding pb-16 md:pb-24">
		<ProjectTabs />
		<div
			class="container grid select-none grid-cols-1 gap-3 sm:grid-cols-2 lg:grid-cols-3"
		>
			{projects.map((project) => <ProjectCard {...project} />)}
		</div>
	</div>
</MainLayout>
